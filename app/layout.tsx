import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { UserProvider, useUser } from "@auth0/nextjs-auth0/client";
import SideBar from "./component/template/side-bar/SideBar";
import VerticalDivider from "./component/atom/verticalDivider/VerticalDivider";
import NavBar from "./component/template/nav-bar/NavBar";
import HorizontalDivider from "./component/atom/horizontalDivider/HorizontalDivider";
import Providers from "./globalRedux/provider";
import NotificationBar from "./component/template/notificationBar/NotificationBar";
import style from "./layout.module.scss";
import "./globals.scss";
import { COLLECTION, getFireStoreData } from "./utlis/firebase/fireStore";
import store from "./globalRedux/store";
import { setOrders } from "./globalRedux/orders/order.slice";
import Preloader from "./globalRedux/Preloader";
import { ORDER, ORDER_ITEM } from "./Types/Order/Order";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
	title: "Admin Plus",
	description: "Generated by create next app",
};

export default async function RootLayout({
	children,
}: {
	children: React.ReactNode;
}) {
	const user = await fetch("http://localhost:3000/api/auth/me");
	console.log(user);

	const orders: any = await getFireStoreData(COLLECTION.ORDER);
	const shortedOrder = orders.map((order: ORDER) => {
		const oderObj = {
			order_id: order.order_id,
			customer_name: order.customer_name,
			customer_email: order.customer_email,
			order_date: order.order_date,
			order_total: order.order_total,
			order_items: order.order_items.map((orderItem: ORDER_ITEM) => {
				const objItem = {
					product_id: orderItem.product_id,
					product_name: orderItem.product_name,
					quantity: orderItem.quantity,
					unit_price: orderItem.unit_price,
					subtotal: orderItem.subtotal,
				};
				return objItem;
			}),
		};
		return oderObj;
	});
	shortedOrder.sort(
		(a: any, b: any) => a.order_id.slice(-2) * 1 - b.order_id.slice(-2) * 1
	);

	store.dispatch(setOrders(shortedOrder));

	return (
		<html lang="en">
			<body className={inter.className}>
				<Preloader order={shortedOrder} />
				<UserProvider>
					<Providers>
						<div className={style.app}>
							<div className={style.body}>
								<div className={style.layout_left}>
									<SideBar />
									<VerticalDivider className={style.vertical_divider} />
								</div>
								<div className={style.layout_right}>
									<NavBar />
									<HorizontalDivider className={style.horizontal_divider} />
									<div className={style.children}>{children}</div>
								</div>
							</div>
							<NotificationBar />
						</div>
					</Providers>
				</UserProvider>
				<div id="portal"></div>
			</body>
		</html>
	);
}
